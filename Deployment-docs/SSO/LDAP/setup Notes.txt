WINDOWS SERVER 2008 R2 [Domain : Contentserv.local]:

1. install adds.
2. create user http-ubuntu in Active Directory
3. Create a SPN (Service Principal Name) user who should be responsible for encryption/decryption of the key.
    - ktpass /princ HTTP/ubuntu.contentserv.local@CONTENTSERV.LOCAL /mapuser http-ubuntu@CONTENTSERV.LOCAL /pass pass@123 /crypto all /ptype KRB5_NT_PRINCIPAL /out C:/http7july.keytab
4. Change http-ubuntu user "Account" property 
    - check "this account support kerberos AES 128 bit encryption".
    - check "this account support kerberos AES 128 bit encryption".
5. Change http-ubuntu user "Delegation" property
    - check "trust this user for delegation".
    
6. Create user test1.
7. Change test1 user "Account" property 
    - check "this account support kerberos AES 128 bit encryption".
    - check "this account support kerberos AES 128 bit encryption".
    
8. Active Directory User and Computers -> Computers 
    - change known computers "delegation" property to "Trust this computer for delegation for any service".
    
9. copy keytab file to webserver.



UBUNTU (WEBSERVER)

1. install kerberos in ubuntu 
    apt-get install krb5-user
    apt-get install krb5-config
    apt-get install libkadm55
    apt-get install heimdal-clients

2. create "/etc/krb5.conf" file.    
3. change /etc/hosts file.

4. edit application.yml file accordingly[ex: application.yml file in springLDAP sample project].
5. copy keytab file in build/lib folder
6. Build command: ./gradlew build
7. Run command [non SSL] : java -Djava.security.krb5.conf=/etc/krb5.conf -jar "sec-server-win-auth-1.0.1.RELEASE.jar"
8. Run command [SSL] : java -Djava.security.krb5.conf=/etc/krb5.conf -Dspring.profiles.active=production  -Dkeystore.file=file:///home/cs/keystore.jks  -jar "sec-server-win-auth-1.0.1.RELEASE.jar".
    NOTE: Refer LDAPS Section for details.
 

 
LDAPS

1. Install the Active Directory Certificate Services :
2. Obtain the Server Certificate : 
    We need to add the Microsoft Active Directory server's SSL certificate to the list of accepted certificates used by the JDK that runs your application server.
    Export the certificate by executing this command on the Active Directory server:
    "certutil -ca.cert client.crt"

3. Import the Server Certificate :
    For an application server to trust your directory's certificate, the certificate must be imported into your Java runtime environment.
    The default keystore file is called cacerts and it lives in the jre\lib\security sub-directory of the Java installation.
    Once the certificate has been imported as per the below instructions, you will need to restart the application to pick up the changes.
    Navigate to the directory in which the Java used by JIRA is installed. If the default JAVA installation is used, then it would be
    cd $JAVA_HOME
    Run the command below, where server-certificate.crt is the name of the file from your directory server:
    sudo keytool -importcert -keystore ./jre/lib/security/cacerts -file client.crt
    keytool will prompt you for a password. The default keystore password is “changeit”.
    When prompted Trust this certificate? [no]: enter “yes” to confirm the key import:
    You may now change 'URL' to use LDAP over SSL (i.e. ldaps://<HOSTNAME>:636/) and use the 'Secure SSL' option when connecting your application to your directory server.
    

FIREFOX    
1. about:config -> negotiate -> *delegation-uris and *trusted-uris -> .contentserv.local

